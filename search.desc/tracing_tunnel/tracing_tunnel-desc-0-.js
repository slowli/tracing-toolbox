searchState.loadedDescShard("tracing_tunnel", 0, "Tunnelling tracing information across an API boundary.\nBoolean value.\nData for a single tracing call site: either a span …\nKind of <code>CallSiteData</code> location: either a span, or an event.\n“DEBUG” level.\nOpaque wrapper for a <code>Debug</code>gable object recorded as a value …\n“ERROR” level.\nOpaque error.\nCall site is an event.\nFloating-point value.\nNew “follows from” relation between spans.\nFallible conversion from a <code>TracedValue</code> reference.\n“INFO” level.\nSigned integer value.\n<code>Subscriber</code>-specific information about tracing spans for a …\nID of a tracing <code>Metadata</code> record as used in <code>TracingEvent</code>s.\nNew call site.\nNew event.\nNew tracing span.\nOpaque object implementing the <code>Debug</code> trait.\nOutput of the conversion.\nInformation about span / event <code>Metadata</code> that is …\nInformation about alive tracing spans for a particular …\nID of a tracing span as used in <code>TracingEvent</code>s.\nError processing a <code>TracingEvent</code> by a <code>TracingEventReceiver</code>.\nCall site is a span.\nSpan was cloned.\nSpan was dropped (aka closed).\nSpan was entered.\nSpan was exited.\nString value.\nThe event contains too many values.\n“TRACE” level.\n(De)serializable presentation for an error recorded as a …\nValue recorded in a tracing span or event.\nCollection of named <code>TracedValue</code>s.\nIterator over name-value references returned from …\nEvent produced during tracing.\nReceiver of <code>TracingEvent</code>s produced by <code>TracingEventSender</code> …\nTracing <code>Subscriber</code> that converts tracing events into …\nTracing level defined in <code>CallSiteData</code>.\nUnsigned integer value.\nThe event contains a reference to an unknown <code>Metadata</code> ID.\nThe event contains a reference to an unknown span ID.\nNew values recorded for a span.\n“WARN” level.\nReturns value as a Boolean, or <code>None</code> if it’s not a …\nReturns value as a <code>Debug</code> string output, or <code>None</code> if this …\nReturns value as a floating-point value, or <code>None</code> if it’s …\nReturns value as a signed integer, or <code>None</code> if it’s not …\nReturns value as a string, or <code>None</code> if it’s not one.\nReturns value as an unsigned integer, or <code>None</code> if it’s …\nMerges entries from another <code>PersistedMetadata</code> instance.\nFields defined by this call site.\nPath to the file where this call site is defined.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates traced values from the values in the specified …\nCreates traced values from the specified record.\nPerforms the conversion.\nCreates traced values from the specified value set.\nReturns the value with the specified name, or <code>None</code> if it …\nInserts a value with the specified name. If a value with …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether this value is a <code>DebugObject</code> with the same …\nChecks whether this metadata collection is empty (i.e., no …\nChecks whether this span collection is empty (i.e., no …\nChecks whether this collection of values is empty.\nIterates over contained call site metadata together with …\nIterates over the contained name-value pairs.\nKind of the call site.\nReturns the number of metadata entries.\nReturns the number of alive spans.\nReturns the number of stored values.\nTracing level.\nLine number for this call site.\nError message produced by its <code>Display</code> implementation.\nPath to the module where this call site is defined.\nName of the call site.\nRestores the receiver from the persisted metadata and …\nCreates a subscriber with the specified “on event” …\nCreates new empty values.\nNormalizes a captured sequence of events so that it does …\nReturns persisted and local spans.\nPersists <code>Metadata</code> produced by the previously consumed …\nConsumes an event and relays it to the tracing …\nError source.\nTracing target.\nTries to consume an event and relays it to the tracing …\nActual number of values.\nMaximum supported number of values per event.\nInformation about the call site.\nID of the source span.\nUnique ID of the call site that will be used to refer to …\nUnique ID of the span that will be used to refer to it in …\nID of the follower span.\nID of the span.\nID of the span.\nID of the span.\nID of the span.\nID of the span.\nID of the span metadata.\nID of the event metadata.\nParent span ID. <code>None</code> means using the contextual parent …\nParent span ID. <code>None</code> means using the contextual parent …\nValues associated with the span.\nRecorded values.\nValues associated with the event.")