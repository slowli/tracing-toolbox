searchState.loadedDescShard("tracing_capture", 0, "Capturing tracing spans and events, e.g. for testing …\nTracing <code>Layer</code> that captures (optionally filtered) spans …\nUniting trait for <code>CapturedSpan</code>s and <code>CapturedEvent</code>s that …\nCaptured tracing event containing a reference to its …\nIterator over <code>CapturedEvent</code>s returned from …\nCaptured tracing span containing a reference to its …\nIterator over <code>CapturedSpan</code>s returned from …\nIterator over the descendant events of a <code>CapturedSpan</code>. …\nIterator over descendant <code>CapturedSpan</code>s of a span. Returned …\nShared wrapper for tracing <code>Storage</code>.\nStatistics about a <code>CapturedSpan</code>.\nStorage of captured tracing information.\nIterates over all captured events in the order of capture.\nIterates over captured spans in the order of capture.\nReturns the references to the ancestor spans, starting …\nReturns the references to the ancestor spans, starting …\nIterates over the direct children of this span, in the …\nDeeply scans all descendant events of this span.\nDeeply scans all descendants of this span.\nIterates over the events of the descendants of this span. …\nIterates over the descendants of this span.\nNumber of times the span was entered.\nReturns events attached to this span.\nNumber of times the span was exited.\nIterates over the spans this span follows from.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the span closed (dropped)?\nLocks the underlying <code>Storage</code> for exclusive access. While …\nReturns the message recorded in this event, i.e., the …\nProvides a reference to the span / event metadata.\nProvides a reference to the event metadata.\nProvides a reference to the span metadata.\nCreates a new layer that will use the specified <code>storage</code> to …\nReturns the reference to the parent span, if any.\nReturns the parent span for this event, or <code>None</code> if is not …\nReturns the reference to the parent span, if any.\nPredicates for <code>CapturedSpan</code>s and <code>CapturedEvent</code>s.\nIterates over root events (i.e., events that do not have a …\nIterates over root spans (i.e., spans that do not have a …\nReturns statistics about span operations.\nReturns a value for the specified field, or <code>None</code> if the …\nReturns a value for the specified field, or <code>None</code> if the …\nReturns a value for the specified field, or <code>None</code> if the …\nIterates over values associated with the event.\nIterates over values that the span was created with, or …\nSpecifies filtering for this layer. Unlike with per-layer …\nPredicate for the ancestors of a <code>CapturedSpan</code> or …\nBoolean “and” combinator for predicates. Produced by …\nPredicate for a particular field of a <code>CapturedSpan</code> or …\nConversion into a predicate for a <code>TracedValue</code> used in the …\nConversion into a predicate for <code>Level</code>s used in the <code>level()</code> …\nConversion into a predicate for the target used in the …\nPredicate for the <code>Level</code> of a <code>CapturedSpan</code> or <code>CapturedEvent</code> …\nPredicate for the message of a <code>CapturedEvent</code> returned by …\nPredicate for the name of a <code>CapturedSpan</code> returned by the …\nBoolean “or” combinator for predicates. Produced by …\nPredicate for the parent of a <code>CapturedSpan</code> or <code>CapturedEvent</code>…\nPredicate output of the conversion. The exact type should …\nPredicate output of the conversion. The exact type should …\nPredicate output of the conversion. The exact type should …\nHelper to wrap holders of <code>CapturedSpan</code>s or <code>CapturedEvent</code>s …\nHelper that allows using <code>Predicate</code>s rather than closures …\nPredicate for the target of a <code>CapturedSpan</code> or <code>CapturedEvent</code>…\nPredicate for <code>TracedValue</code>s returned by the <code>value()</code> …\nChecks that all of the items match the predicate.\nCreates a predicate for ancestor <code>CapturedSpan</code>s of a span …\nCreates a predicate for a particular field of a …\nFinds the first item matching the predicate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a predicate into an <code>Fn(_) -&gt; bool</code> closure.\nPerforms the conversion.\nPerforms the conversion.\nPerforms the conversion.\nFinds the last item matching the predicate.\nCreates a predicate for the <code>Level</code> of a <code>CapturedSpan</code> or …\nCreates a predicate for the message of a <code>CapturedEvent</code>.\nCreates a predicate for the name of a <code>CapturedSpan</code>.\nChecks that none of the items match the predicate.\nCreates a predicate for the direct parent <code>CapturedSpan</code> of …\nCreates a scanner for the events contained by this holder. …\nCreates a scanner for the spans contained by this holder. …\nFinds the single item matching the predicate.\nCreates a predicate for the target of a <code>CapturedSpan</code> or …\nCreates a predicate for a <code>TracedValue</code> that checks whether …")